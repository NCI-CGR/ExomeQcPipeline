#!/usr/bin/python

project = config['project']


#rule all:
#    input:
#        png_aritifact = precalling_dir + '/seq_artifact.png',
#        png_foldeighty = precalling_dir + '/fold80.png',
#        png_oxidation = precalling_dir + '/oxidation.png',
#        low_score_sample = precalling_dir + '/lowest_predatpter_baitbias_sample.csv'

rule pre_calling_plot:
    input:
        project + '/pre_calling_qc_report.txt'
    output:
        png_aritifact = precalling_dir + '/seq_artifact.png',
        png_foldeighty = precalling_dir + '/fold80.png',
        png_oxidation = precalling_dir + '/oxidation.png',
        png_insertSize = precalling_dir + '/insertSize.png',
        R = precalling_dir + '/precalling_qc_plot.R',
        Rout = precalling_dir + '/precalling_qc_plot.R.out'
    run:
        rTxt = '''
        library(ggplot2)
        data_precalling <- read.table("''' + str(input) + '''", header = TRUE, sep = "\t")
        png("''' + str(output.png_aritifact) + '''")
        boxplot(data_precalling$LOWEST_PREADATPER_TOTAL_QSCORE,data_precalling$LOWEST_BAITBIAS_TOTAL_QSCORE, names = c("Preadapter Artifact", "Baitbias Artifact"),ylab = "LOWEST_TOTAL_QSCORE", main = "CollectSequencingArtifactMetrics",  outline=FALSE)
        dev.off()
        png("''' + str(output.png_oxidation) + '''")
        boxplot(data_precalling$OXIDATION_Q_AVE,data_precalling$LOWEST_OXIDATION_Q, names = c("Average Oxidation Qual", "Lowest Oxidation Qual"),ylab = "LOWEST_TOTAL_QSCORE", main = "CollectOxidationMetrics",  outline=FALSE, ylab="Qual Score")
        dev.off()
        png("''' + str(output.png_insertSize) + '''")
        boxplot(data_precalling$MEDIAN_INSERT_SIZES,data_precalling$MEAN_INSERT_SIZES, names = c("Median Insert Size", "Mean Insert Size"),ylab = "Base Pair", main = "CollectInsertSizeMetrics",  outline=FALSE, ylab="Qual Score")
        dev.off()        
        data_precalling2<-data_precalling[!(data_precalling$FOLD_80_BASE_PENALTY=="?"),]
        png("''' + str(output.png_foldeighty) + '''")
        ggplot(data_precalling2, aes(as.numeric(as.character(FOLD_80_BASE_PENALTY)))) + 
        geom_histogram() +
        scale_y_continuous(trans="log2") +
        labs(x = "Fold 80 Penalty score", y = "subject count(log2 transformed)") +
        theme_bw()
        dev.off()
        '''
        with open(output.R, 'w') as R:
            R.write(rTxt)
        shell('R --vanilla < {output.R} > {output.Rout}')

rule count_lowest_predatpter_baitbias_sample:
    input:
        project + '/pre_calling_qc_report.txt'
    output:
        precalling_dir + '/lowest_predatpter_baitbias_sample.csv'
    shell:
        '. /etc/profile.d/modules.sh; sh modules/count_lowest_predatpter_baitbias_sample.sh {input} {output}'
