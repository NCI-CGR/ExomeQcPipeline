#!/usr/bin/python

project = config['project']

precalling_dir = 'precalling_qc'

rule all:
    input:
        precalling_dir + '/seq_artifact.png',
        precalling_dir + '/lowest_predatpter_baitbias_sample.csv'

rule pre_calling_plot:
    input:
        project + '/pre_calling_qc_report.txt'
    output:
        png_aritifact = precalling_dir + '/seq_artifact.png',
        png_foldeighty = precalling_dir + '/fold80.png',
        R = precalling_dir + '/precalling_qc_plot.R',
        Rout = precalling_dir + '/precalling_qc_plot.R.out'
    run:
        rTxt = '''
        data_precalling <- read.table("''' + str(input) + '''", header = TRUE, sep = "\t")
        png("''' + str(output.png_aritifact) + '''")
        boxplot(data_precalling$LOWEST_PREADATPER_TOTAL_QSCORE,data_precalling$LOWEST_BAITBIAS_TOTAL_QSCORE, names = c("Preadapter Artifact", "Baitbias Artifact"),ylab = "LOWEST_TOTAL_QSCORE", main = "CollectSequencingArtifactMetrics",  outline=FALSE)
        dev.off()
        png("''' + str(output.png_foldeighty) + '''")
        boxplot(as.numeric(as.character(data_precalling$FOLD_80_BASE_PENALTY)),ylab = "Fold 80 Penalty Score", main = "CollectFold80Metrics",  outline=TRUE)
        dev.off()
        '''
        with open(output.R, 'w') as R:
            R.write(rTxt)
        shell('R --vanilla < {output.R} > {output.Rout}')

rule count_lowest_predatpter_baitbias_sample:
    input:
        project + '/pre_calling_qc_report.txt'
    output:
        precalling_dir + '/lowest_predatpter_baitbias_sample.csv'
    shell:
        '. /etc/profile.d/modules.sh; sh ./count_lowest_predatpter_baitbias_sample.sh {input} {output}'
